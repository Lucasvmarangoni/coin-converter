name: Currency Converter 1.0.0 workflow

run-name: Deploy to ${{ inputs }} by @${{ github.actor }}

on:
  push:
    branches:
      - main
      - '!master'
    # branches-ignore:    
    #   - master    

permissions:  
  actions: none
  checks: none
  contents: read    
  deployments: none
  id-token: none
  issues: none  
  discussions: none
  packages: none
  pages: none
  pull-requests: none  
  repository-projects: none
  security-events: none
  statuses: none 

env:
  DATABASE_URI: ${{ secrets.DATABASE_URI }}  
  MONGO_USER: ${{ secrets.MONGO_USER }}
  MONGO_PWD: ${{ secrets.MONGO_PWD }}
  MONGO_DB: ${{ secrets.MONGO_DB }}
  API_KEY: ${{ secrets.API_KEY }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  EXPRESS_SESSION_SECRET: ${{ secrets.EXPRESS_SESSION_SECRET }}
  GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
  GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
  REDIS_HOST: ${{ secrets.REDIS_HOST }}
  REDIS_PORT: ${{ secrets.REDIS_PORT }}  

jobs:

  test-job:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        node-version: [20.x]  

    steps:
     
      - uses: actions/checkout@v4  
      
      - name: Set up environment variables
        working-directory: ./
        run: |
          echo "DATABASE_URI=${{ secrets.DATABASE_URI }}" >> .env         
          echo "MONGO_USER=${{ secrets.MONGO_USER }}" >> .env
          echo "MONGO_PWD=${{ secrets.MONGO_PWD }}" >> .env
          echo "MONGO_DB=${{ secrets.MONGO_DB }}" >> .env
          echo "API_KEY=${{ secrets.API_KEY }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "EXPRESS_SESSION_SECRET=${{ secrets.EXPRESS_SESSION_SECRET }}" >> .env
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
          echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> .env
          echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" >> .env
          cat .env      

      - name: run containering            
        run: npm run containering

      - name: Run unit tests
        run: docker-compose exec -T currency-converter pnpm run test
        if: success()

      - name: Run e2e tests       
        env:
          NODE_ENV: test
        run: docker-compose exec -T currency-converter pnpm run test:e2e 
        if: success()

     